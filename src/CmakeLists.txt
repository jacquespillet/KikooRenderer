set(MainWindowSrc
	KikooRenderer.cpp
	MainWindow.cpp
	
	View3D/View3D.cpp
	View3D/View3DGL.cpp

	3DEngine/Components/Component.cpp
	3DEngine/Components/MeshFilterComponent.cpp
	3DEngine/Components/TransformComponent.cpp
	3DEngine/Components/MaterialComponent.cpp
	3DEngine/Components/BoundingComponent.cpp

	3DEngine/Object3D.cpp
	3DEngine/Scene.cpp
	3DEngine/Shader.cpp
	3DEngine/StandardShaders.cpp
	3DEngine/CameraScene.cpp
	3DEngine/Util.cpp

	3DEngine/BaseObjects.cpp

	Geometry/Util.cpp	
)

add_executable(MainWindow ${MainWindowSrc})
#target_link_libraries(MainWindow lib file name)
target_link_libraries(MainWindow Qt5::Core Qt5::Widgets Qt5::OpenGL Qt5::3DCore Qt5::3DExtras Qt5::3DRender Qt5::3DInput)
# target_link_libraries(MainWindow debug Qt5Cored optimized Qt5Core)
# target_link_libraries(MainWindow debug Qt5Guid optimized Qt5Gui)
# target_link_libraries(MainWindow debug Qt5Widgetsd optimized Qt5Widgets)
# target_link_libraries(MainWindow debug Qt5Chartsd optimized Qt5Charts)
# target_link_libraries(MainWindow debug Qt5OpenGLd optimized Qt5OpenGL)
# target_link_libraries(MainWindow debug Qt53DCored optimized Qt53DCore)
# target_link_libraries(MainWindow debug Qt53DRenderd optimized Qt53DRender)
# target_link_libraries(MainWindow debug Qt53DInputd optimized Qt53DInput)
# target_link_libraries(MainWindow debug Qt53DLogicd optimized Qt53DLogic)
# target_link_libraries(MainWindow debug Qt53DExtrasd optimized Qt53DExtras)
# target_link_libraries(MainWindow debug Qt53DAnimationd optimized Qt53DAnimation)

install(TARGETS MainWindow
		RUNTIME DESTINATION bin
		COMPONENT MainWindowDist
)